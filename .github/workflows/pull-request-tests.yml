name: Integration Tests

on:
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      etcd:
        image: quay.io/coreos/etcd:latest
        ports:
          - 2379:2379
        env:
          ETCD_NAME: etcd-danube
          ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler netcat-openbsd

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Wait for etcd to be Ready
        run: |
          for i in {1..10}; do
            if nc -zv 127.0.0.1 2379; then
              echo "etcd is ready."
              break
            elif [ $i -eq 10 ]; then
              echo "etcd failed to start."
              docker logs etcd-danube
              exit 1
            fi
            echo "Waiting for etcd to start..."
            sleep 5
          done

      - name: Create certificate files
        run: |
          mkdir -p ./cert
          printf "%s" "${{ secrets.CERT_FILE }}" > ./cert/server-cert.pem
          printf "%s" "${{ secrets.KEY_FILE }}" > ./cert/server-key.pem
          printf "%s" "${{ secrets.CA_FILE }}" > ./cert/ca-cert.pem

      - name: Build broker and CLI
        env:
          RUST_BACKTRACE: 1
        run: |
          cargo build --release -p danube-broker -p danube-admin-cli

      - name: Start 3 Brokers in background
        env:
          RUST_LOG: info
        run: |
          mkdir -p temp
          ./target/release/danube-broker \
            --config-file config/danube_broker.yml \
            --broker-addr 0.0.0.0:6650 \
            --admin-addr 0.0.0.0:50051 \
            --prom-exporter 0.0.0.0:3000 \
            > temp/broker_6650.log 2>&1 &

          ./target/release/danube-broker \
            --config-file config/danube_broker.yml \
            --broker-addr 0.0.0.0:6651 \
            --admin-addr 0.0.0.0:50052 \
            --prom-exporter 0.0.0.0:3001 \
            > temp/broker_6651.log 2>&1 &

          ./target/release/danube-broker \
            --config-file config/danube_broker.yml \
            --broker-addr 0.0.0.0:6652 \
            --admin-addr 0.0.0.0:50053 \
            --prom-exporter 0.0.0.0:3002 \
            > temp/broker_6652.log 2>&1 &
          sleep 5

      - name: Wait for Brokers to be Ready
        run: |
          for port in 6650 6651 6652; do
            for i in {1..6}; do
              if nc -zv 127.0.0.1 $port; then
                echo "Broker on port $port is ready."
                break
              elif [ $i -eq 6 ]; then
                echo "Broker on port $port failed to start."
                exit 1
              fi
              echo "Waiting for broker on port $port to start..."
              sleep 5
            done
          done

      - name: Run integration tests
        env:
          RUST_BACKTRACE: 1
        run: |
          # Run broker integration tests serially to avoid flakiness in timing-sensitive tests
          cargo test --release -p danube-broker --tests -- --test-threads=1 --nocapture
          # Run danube-persistent-storage integration tests
          cargo test -p danube-persistent-storage --tests -- --nocapture
          # Run library unit tests
          cargo test --lib -p danube-client
          cargo test --lib -p danube-metadata-store
          cargo test --lib -p danube-persistent-storage

      - name: Print broker logs on failure
        if: failure()
        run: |
          echo '--- broker_6650.log ---'
          sed -n '1,200p' temp/broker_6650.log || true
          echo '--- broker_6651.log ---'
          sed -n '1,200p' temp/broker_6651.log || true
          echo '--- broker_6652.log ---'
          sed -n '1,200p' temp/broker_6652.log || true

      - name: Stop brokers
        if: always()
        run: |
          pkill -f danube-broker || true