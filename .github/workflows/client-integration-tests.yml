name: Danube Client Integration Tests

on:
  pull_request:
    paths:
      - 'danube-client/**'
      - '.github/workflows/client-integration-tests.yml'

jobs:
  client-tests:
    runs-on: ubuntu-latest
    services:
      etcd:
        image: bitnami/etcd:latest
        ports:
          - 2379:2379
        options: >-
          --name etcd-danube-client
        env:
          ALLOW_NONE_AUTHENTICATION: "yes"
          ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
          ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq netcat-openbsd protobuf-compiler

      - name: Wait for etcd to be ready
        run: |
          for i in {1..10}; do
            if nc -zv 127.0.0.1 2379; then
              echo "etcd is ready."
              break
            elif [ $i -eq 10 ]; then
              echo "etcd failed to start."
              docker logs etcd-danube-client
              exit 1
            fi
            echo "Waiting for etcd to start..."
            sleep 5
          done

      - name: Create certificate files
        run: |
          mkdir -p ./cert
          printf "%s" "${{ secrets.CERT_FILE }}" > ./cert/server-cert.pem
          printf "%s" "${{ secrets.KEY_FILE }}" > ./cert/server-key.pem
          printf "%s" "${{ secrets.CA_FILE }}" > ./cert/ca-cert.pem

      - name: Build workspace (release)
        run: cargo build --workspace --release

      - name: Start Broker A (background)
        env:
          RUST_LOG: info
        run: |
          nohup ./target/release/danube-broker \
            --config-file ./config/danube_broker.yml \
            --broker-addr 0.0.0.0:6650 \
            --admin-addr 0.0.0.0:50051 \
            --prom-exporter 0.0.0.0:9040 \
            --cert-file ./cert/server-cert.pem \
            --key-file ./cert/server-key.pem \
            --ca-file ./cert/ca-cert.pem \
            > broker-a.log 2>&1 &
          echo $! > broker-a.pid
          
          # Wait for Broker A admin and discovery ports to be ready
          for i in {1..15}; do
            if nc -zv 127.0.0.1 50051 && nc -zv 127.0.0.1 6650; then
              echo "Broker A is ready."
              break
            elif [ $i -eq 15 ]; then
              echo "Broker A failed to start."
              cat broker-a.log
              exit 1
            fi
            echo "Waiting for Broker A to start... ($i/15)"
            sleep 3
          done

      - name: Provision client test topics (optional)
        env:
          DANUBE_ADMIN_ENDPOINT: http://127.0.0.1:50051
        run: |
          ./target/release/danube-admin-cli topics create /default/client-reconnect-test || true
          ./target/release/danube-admin-cli topics create /default/client-consumer-reconnect || true

      - name: Background failover - kill A and start B (delayed)
        env:
          RUST_LOG: info
        run: |
          ( \
            # Delay failover sufficiently so tests establish connections to Broker A first
            sleep 20; \
            echo "Killing Broker A to simulate failure..."; \
            if [ -f broker-a.pid ]; then \
              BROKER_A_PID=$(cat broker-a.pid); \
              kill $BROKER_A_PID || echo "Broker A may have already exited"; \
              sleep 2; \
              kill -9 $BROKER_A_PID 2>/dev/null || echo "Force kill not needed"; \
            fi; \
            echo "âœ“ Broker A terminated"; \
            \
            echo "Starting Broker B..."; \
            nohup ./target/release/danube-broker \
              --config-file ./config/danube_broker.yml \
              --broker-addr 0.0.0.0:6651 \
              --admin-addr 0.0.0.0:50052 \
              --prom-exporter 0.0.0.0:9041 \
              --cert-file ./cert/server-cert.pem \
              --key-file ./cert/server-key.pem \
              --ca-file ./cert/ca-cert.pem \
              > broker-b.log 2>&1 & \
            echo $! > broker-b.pid; \
            for i in {1..15}; do \
              if nc -zv 127.0.0.1 50052 && nc -zv 127.0.0.1 6651; then \
                echo "Broker B is ready."; \
                break; \
              elif [ $i -eq 15 ]; then \
                echo "Broker B failed to start."; \
                cat broker-b.log; \
                exit 1; \
              fi; \
              echo "Waiting for Broker B to start... ($i/15)"; \
              sleep 3; \
            done; \
          ) &

      - name: Run danube-client tests only (serialized)
        env:
          RUST_LOG: info
          DANUBE_CA_CERT: ${{ github.workspace }}/cert/ca-cert.pem
        run: |
          cargo test -p danube-client -- --nocapture --test-threads=1

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: client-integration-logs
          path: |
            broker-a.log
            broker-b.log
            **/*.rs
