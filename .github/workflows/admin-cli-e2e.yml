name: Admin CLI E2E

on:
  pull_request:
    paths:
      - 'danube-admin-cli/**'
      - 'danube-broker/**'
      - 'danube-core/proto/DanubeAdmin.proto'

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      etcd:
        image: quay.io/coreos/etcd:latest
        ports:
          - 2379:2379
        env:
          ETCD_NAME: etcd-danube
          ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq netcat-openbsd protobuf-compiler

      - name: Wait for etcd to be ready
        run: |
          for i in {1..10}; do
            if nc -zv 127.0.0.1 2379; then
              echo "etcd is ready."
              break
            elif [ $i -eq 10 ]; then
              echo "etcd failed to start."
              docker logs etcd-danube
              exit 1
            fi
            echo "Waiting for etcd to start..."
            sleep 5
          done

      - name: Create certificate files
        run: |
          mkdir -p ./cert
          printf "%s" "${{ secrets.CERT_FILE }}" > ./cert/server-cert.pem
          printf "%s" "${{ secrets.KEY_FILE }}" > ./cert/server-key.pem
          printf "%s" "${{ secrets.CA_FILE }}" > ./cert/ca-cert.pem

      - name: Build workspace (release)
        run: cargo build --workspace --release

      - name: Start broker (background)
        env:
          RUST_LOG: info
        run: |
          nohup ./target/release/danube-broker \
            --config-file ./config/danube_broker.yml \
            --broker-addr 0.0.0.0:6650 \
            --admin-addr 0.0.0.0:50051 \
            --prom-exporter 0.0.0.0:9040 \
            > broker.log 2>&1 &
          # Wait for admin and discovery ports to be ready
          for i in {1..10}; do
            if nc -zv 127.0.0.1 50051; then
              echo "Broker admin port is ready."
              break
            elif [ $i -eq 10 ]; then
              echo "Broker failed to start."
              cat broker.log
              exit 1
            fi
            echo "Waiting for broker to start..."
            sleep 5
          done

      - name: Run admin CLI E2E tests
        env:
          DANUBE_ADMIN_ENDPOINT: http://127.0.0.1:50051
          DANUBE_BROKER_ENDPOINT: http://127.0.0.1:6650
        run: cargo test -p danube-admin-cli --tests -- --nocapture

      - name: Upload broker logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: broker-logs
          path: broker.log
